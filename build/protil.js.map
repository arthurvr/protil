{"version":3,"sources":["../lib/protil.js"],"names":[],"mappings":";;;;;;AAMA,CAAC,CAAA,UAAS,MAAM,EAAE,OAAO,EAAE;AACzB,MAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AAC9C,UAAM,CAAC,EAAE,EAAE,YAAW;AACpB,aAAO,OAAO,CAAC,MAAM,CAAC,CAAC;KACxB,CAAC,CAAC;GACJ,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACtC,UAAM,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;GAClC,MAAM;AACL,UAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;GACjC;CAEF,CAAA,CAAC,IAAI,EAAE,UAAS,MAAM,EAAE;AACvB,cAAY,CAAC;;AAEb,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,SAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;AACpB,MAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;;AAE7B,MAAI,UAAU,YAAA,CAAC;AACf,MAAI,MAAM,CAAC,MAAM,EAAE,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;;;AAG9C,MAAI,CAAC,OAAO,EAAE;AACZ,QAAI,OAAO,GAAG,oCAAoC,GAChD,mEAAmE,CAAC;AACtE,WAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GACvB;;AAED,QAAM,CAAC,UAAU,GAAG,UAAS,CAAC,EAAC;AAC7B,WAAO,GAAG,CAAC,CAAC;GACb,CAAC;;AAEF,QAAM,CAAC,UAAU,GAAG,SAAS,UAAU,GAAG;AACxC,UAAM,CAAC,MAAM,GAAG,UAAU,CAAC;AAC3B,WAAO,IAAI,CAAC;GACb,CAAC;;AAEF,QAAM,CAAC,MAAM,GAAG,UAAS,EAAE,EAAC;AAC1B,WAAO,YAAiB;wCAAL,IAAI;AAAJ,YAAI;;;AACnB,UAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/B,eAAS,MAAM,CAAC,KAAK,EAAE,KAAK,EAAC;AACzB,eAAO;AACH,eAAK,EAAE,KAAK;AACZ,kBAAQ,EAAE,KAAK;SAClB,CAAC;OACL;;AAED,UAAG,CAAC,GAAG,CAAC,IAAI,EAAC;AACT,eAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;OAC9C;AACD,aAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;KACtE,CAAC;GACH,CAAC;;AAEF,SAAO,MAAM,CAAC;CACf,CAAC,CAAC","file":"protil.js","sourcesContent":["/**\n * protil\n * a utility library for working with promises\n */\n\n/*global define*/\n!function(global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return factory(global);\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = factory(global);\n  } else {\n    global.protil = factory(global);\n  }\n\n}(this, function(global) {\n  'use strict';\n\n  let protil = {};\n  console.log(Promise)\n  let Promise = global.Promise;\n\n  let prevProtil;\n  if (global.protil) prevProtil = global.protil;\n\n  // check for promise constructor\n  if (!Promise) {\n    let warning = 'Promise constructor not detected. ' +\n      'Please pass your promise implementation to the setPromise method.';\n    console.warn(warning);\n  }\n\n  protil.setPromise = function(p){\n    Promise = p;\n  };\n\n  protil.noConflict = function noConflict() {\n    global.protil = prevProtil;\n    return this;\n  };\n\n  protil.always = function(fn){\n    return function(...args){\n        let res = fn.apply(null, args);\n        function handle(error, value){\n            return {\n                value: value,\n                rejected: error\n            };\n        }\n\n        if(!res.then){\n            return Promise.resolve(handle(false, res));\n        }\n        return res.then(handle.bind(null, false), handle.bind(null, true));\n    };\n  };\n\n  return protil;\n});\n"]}